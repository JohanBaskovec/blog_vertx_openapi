openapi: 3.0.1
info:
  title: Blog
  description: ''
  contact:
    email: johan@johanbaskovec.fr
  version: 0.0.0
servers:
  - url: localhost:8081
    description: The server
paths:
  /article/{id}:
    get:
      description: Get an article
      operationId: getArticleById
      "x-vertx-event-bus": article_service
      parameters:
        - name: id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ObjectId'
      responses:
        200:
          description: An article
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
        404:
          description: Article not found
  /article:
    put:
      security:
        - cookieAuth: []
      description: Update an article
      operationId: updateArticle
      "x-vertx-event-bus": article_service
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Article'
      responses:
        204:
          description: Article updated, no content returned
        404:
          description: Article not found
    post:
      security:
        - cookieAuth: []
      description: Insert an article
      operationId: insertArticle
      "x-vertx-event-bus": article_service
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Article'
      responses:
        204:
          description: Article created, no content returned
    get:
      description: Get all the articles
      operationId: getAllArticles
      "x-vertx-event-bus": article_service
      responses:
        200:
          description: All the articles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Article'
  /register:
    post:
      description: Register
      operationId: register
      "x-vertx-event-bus": user_service
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrationForm'
      responses:
        204:
          description: User created, no content
  /logout:
    post:
      security:
        - cookieAuth: []
      description: Logout
      operationId: logout
      "x-vertx-event-bus": session_service
      responses:
        204:
          description: Logout, no content
  /me:
    get:
      security:
        - cookieAuth: []
      description: Get the current session
      operationId: getCurrentAuthenticatedUser
      "x-vertx-event-bus": session_service
      responses:
        200:
          description: The authenticated user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /login:
    post:
      description: Create a new HTTP session
      operationId: login
      "x-vertx-event-bus": session_service
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginForm'
      responses:
        400:
          description: Username or password incorrect
        200:
          description: The authenticated user
          headers:
            Set-Cookie:
              schema:
                type: string
                example: JSESSIONID=abcde12345; Path=/; HttpOnly
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

components:
  schemas:
    ObjectId:
      type: string
      nullable: false
    Article:
      type: object
      required:
        - id
        - title
        - content
      properties:
        id:
          $ref: '#/components/schemas/ObjectId'
        title:
          type: string
          nullable: false
        content:
          type: string
          nullable: false
    LoginForm:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
          nullable: false
        password:
          type: string
          nullable: false
    RegistrationForm:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
          nullable: false
        password:
          type: string
          nullable: false
    User:
      type: object
      required:
        - username
      properties:
        username:
          type: string
          nullable: false
        password:
          type: string
          nullable: true
    HttpSession:
      type: object
      required:
        - id
        - username
      properties:
        id:
          type: string
          nullable: false
        username:
          type: string
          nullable: false
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: SESSIONID

